import { CKEditor } from '@ckeditor/ckeditor5-react';
import {
  ClassicEditor,
  Essentials,
  Paragraph,
  Bold,
  Italic,
  Image,
  ImageStyle,
  ImageToolbar,
  ImageCaption,
  ImageTextAlternative,
  ImageUpload,
  AutoImage,
  ImageInsert,
  ImageResize,
  LinkImage,
  Table,
  TableToolbar,
  TableProperties,
  TableCellProperties,
  TableEditing,
  Heading,
  Link,
  List,
  BlockQuote,
  CodeBlock,
  FontColor,
  FontFamily,
  FontSize,
  Highlight,
  RemoveFormat,
  SourceEditing,
  Alignment,
  Autoformat,
  Bookmark,
  Emoji,
  Mention,
  FindAndReplace,
  Fullscreen,
  HorizontalLine,
  Indent,
  IndentBlock,
  PasteFromOffice,
  Underline,
  Strikethrough,
  FontBackgroundColor,
} from 'ckeditor5';
import 'ckeditor5/ckeditor5.css';

interface CKEditorProps {
  initialData?: string;
  setEditorInstance: (editor: ClassicEditor) => void;
}

export function SDckeditor({ initialData, setEditorInstance }: CKEditorProps) {
  return (
    <div className="sd-ckeditor">
      <CKEditor
        editor={ClassicEditor}
        config={{
          licenseKey: 'GPL',
          plugins: [
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Underline,
            Strikethrough,
            Heading,
            Link,
            Image,
            AutoImage,
            ImageInsert,
            ImageStyle,
            ImageToolbar,
            ImageCaption,
            ImageTextAlternative,
            ImageUpload,
            ImageResize,
            LinkImage,
            Table,
            TableToolbar,
            TableProperties,
            TableCellProperties,
            TableEditing,
            List,
            BlockQuote,
            CodeBlock,
            FontColor,
            FontFamily,
            FontSize,
            FontBackgroundColor,
            Highlight,
            RemoveFormat,
            Alignment,
            Autoformat,
            Bookmark,
            Indent,
            IndentBlock,
            HorizontalLine,
            Mention,
            Emoji,
            FindAndReplace,
            PasteFromOffice,
            Fullscreen,
            SourceEditing,
            // Markdown, // Minimap, // ShowBlocks, // MediaEmbed, // PictureEditing,
          ],
          toolbar: [
            'undo',
            'redo',
            'findAndReplace',
            '|',
            'heading',
            '|',
            'bold',
            'italic',
            'underline',
            'strikethrough',
            'removeFormat',
            '|',
            'fontSize',
            'fontFamily',
            'fontColor',
            'fontBackgroundColor',
            'highlight',
            '|',
            'alignment',
            'bulletedList',
            'numberedList',
            'outdent',
            'indent',
            '|',
            'link',
            'imageInsert',
            'insertTable',
            '|',
            'bookmark',
            'horizontalLine',
            'blockQuote',
            'codeBlock',
            'emoji',
            '|',
            'fullscreen',
            'sourceEditing',
            // 'mediaEmbed', // 'indentBlock', // 'markdown', // 'minimap', // 'pasteFromOffice', // 'showBlocks',
          ],
          image: {
            toolbar: [
              'imageStyle:inline',
              'imageStyle:block',
              'imageStyle:side',
              '|',
              'toggleImageCaption',
              'imageTextAlternative',
              '|',
              'linkImage',
              'resizeImage',
            ],
            resizeOptions: [
              {
                name: 'resizeImage:original',
                value: null,
                icon: 'original',
              },
              {
                name: 'resizeImage:25',
                value: '25',
                icon: 'small',
              },
              {
                name: 'resizeImage:50',
                value: '50',
                icon: 'medium',
              },
              {
                name: 'resizeImage:75',
                value: '75',
                icon: 'large',
              },
            ],
          },
          table: {
            contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells'],
          },
          initialData: initialData,
        }}
        onReady={editor => {
          setEditorInstance(editor);
        }}
      />
    </div>
  );
}
